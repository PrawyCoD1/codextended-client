
typedef enum {
	SVT_UNDEFINED, //0
	SVT_STRING, //1
	SVT_LOCALIZED_STRING, //2
	SVT_VECTOR, //3
	SVT_FLOAT, //4
	SVT_INT, //5
	SVT_CODEPOS, //6
	SVT_OBJECT, //7
	SVT_KEY_VALUE, //8
	SVT_FUNCTION, //9
	SVT_STACK, //10
	SVT_ANIMATION, //11
	SVT_THREAD, //12
	SVT_ENTITY, //13
	SVT_STRUCT, //14
	SVT_ARRAY, //16
	SVT_DEAD_THREAD, //15
	SVT_DEAD_ENTITY, //17
	SVT_DEAD_OBJECT //18
} script_variable_type;

typedef void(__cdecl *SCRIPTFUNCTIONCALL)(int);

typedef struct {
	const char* name;
	SCRIPTFUNCTIONCALL call;
	int developer;
} SCRIPTFUNCTION;

typedef struct {
	//Generated by macro, some could be shorts instead of int and most that you won't need/don't use are wrong.
	bool(*GetBool)(int);
	int(*GetInt)(int);
	int(*GetAnim)(int);
	int(*GetAnimTree)(int);
	float(*GetFloat)(int);
	char* (*GetString)(int);
	int(*GetConstString)(int);
	int(*GetDebugString)(int);
	char* (*GetIString)(int);
	int(*GetConstIString)(int);
	float* (*GetVector)(int);
	int(*GetFunc)(int);
	int(*GetEntityNum)(int);
	int(*GetType)(int);
	int(*GetPointerType)(int);
	int(*GetNumParam)(int);
	void(*AddBool)(bool);
	void(*AddInt)(int);
	void(*AddFloat)(float);
	void(*AddAnim)(int);
	void(*AddUndefined)();
	void(*AddEntityNum)(int);
	void(*AddStruct)(int);
	void(*AddString)(char*);
	void(*AddIString)(char*);
	void(*AddConstString)(int);
	void(*AddVector)(float*);
	void(*AddObject)(int);
	void(*AddArray)();
	void(*AddArrayStringIndexed)(int);
	int(*MakeArray)(/*noidea*/); //this sneaky is actually placed before addarray but its not in memory
	int(*Error)(/*noidea*/);
	int(*ErrorWithDialogMessage)(/*noidea*/);
	int(*ParamError)(/*noidea*/);
	int(*ObjectError)(/*noidea*/);
	int(*SetDynamicEntityField)(/*noidea*/);
	int(*FreeEntityNum)(/*noidea*/);
	int(*GetEntityId)(int);
	int(*SetClassMap)(/*noidea*/);
	int(*RemoveClassMap)(/*noidea*/);
	void(*AddClassField)(int);
	void(*AddFields)(int);
	int(*FindField)(/*noidea*/);
	int(*GetOffset)(int);
	int(*CopyEntityNum)(/*noidea*/);
	int(*Init)(/*noidea*/);
	int(*Shutdown)(/*noidea*/);
	int(*Abort)(/*noidea*/);
	int(*SetLoading)(/*noidea*/);
	int(*AllocGameVariable)(/*noidea*/);
	int(*InitSystem)(/*noidea*/);
	int(*GetChecksum)(int);
	int(*HasSourceFiles)(/*noidea*/);
	int(*SaveSource)(/*noidea*/);
	int(*LoadSource)(/*noidea*/);
	int(*SkipSource)(/*noidea*/);
	int(*SavePre)(/*noidea*/);
	int(*SavePost)(/*noidea*/);
	int(*SaveShutdown)(/*noidea*/);
	int(*LoadPre)(/*noidea*/);
	int(*LoadShutdown)(/*noidea*/);
	int(*LoadScript)(/*noidea*/);
	int(*FindAnimTree)(/*noidea*/);
	int(*FindAnim)(/*noidea*/);
	int(*GetFunctionHandle)(int);
	int(*BeginLoadScripts)(/*noidea*/);
	int(*BeginLoadAnimTrees)(/*noidea*/);
	int(*EndLoadScripts)(/*noidea*/);
	int(*EndLoadAnimTrees)(/*noidea*/);
	int(*PrecacheAnimTrees)(/*noidea*/);
	int(*FreeScripts)(/*noidea*/);
	int(*FreeGameVariable)(/*noidea*/);
	int(*ShutdownSystem)(/*noidea*/);
	int(*IsSystemActive)(/*noidea*/);
	int(*ExecThread)(/*noidea*/);
	int(*ExecEntThreadNum)(/*noidea*/);
	void(*AddExecThread)(int);
	void(*AddExecEntThreadNum)(int);
	int(*IsThreadAlive)(/*noidea*/);
	int(*FreeThread)(/*noidea*/);
	int(*ConvertThreadToSave)(/*noidea*/);
	int(*ConvertThreadFromLoad)(/*noidea*/);
	int(*SetString)(/*noidea*/);
	int(*AllocString)(/*noidea*/);
	int(*SetTime)(/*noidea*/);
	int(*RunCurrentThreads)(/*noidea*/);
	int(*ResetTimeout)(/*noidea*/);
	int(*NotifyNum)(/*noidea*/);
	int(*SL_ConvertToString)(/*noidea*/);
	int(*SL_GetString)(/*noidea*/);
	int(*SL_GetLowercaseString)(/*noidea*/);
	int(*SL_FindLowercaseString)(/*noidea*/);
	int(*NotifyId)(/*noidea*/);
	int(*CreateCanonicalFilename)(/*noidea*/);
	int(*GetAnimsIndex)(int);
	int(*GetAnims)(int);
} SCR_FUNCS;

extern SCR_FUNCS Scr;